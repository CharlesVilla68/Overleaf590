name: Compile LaTeX Document

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Get commit hash
      id: commit
      run: |
        SHORT_HASH=$(git rev-parse --short HEAD)
        echo "short_hash=$SHORT_HASH" >> $GITHUB_OUTPUT
        echo "Commit hash: $SHORT_HASH"
    
    - name: Update prologue.tex with commit hash
      run: |
        sed -i "s/GIT_HASH_HERE/${{ steps.commit.outputs.short_hash }}/g" 2025F_SSW590_11/prologue.tex
        echo "Updated prologue.tex with commit hash"
        cat 2025F_SSW590_11/prologue.tex | grep "Version:"
    
    - name: Compile LaTeX document
      uses: xu-cheng/latex-action@v3
      with:
        root_file: itManual.tex
        working_directory: 2025F_SSW590_11
        latexmk_use_xelatex: false
        args: -pdf -interaction=nonstopmode -file-line-error
        continue_on_error: true
    
    - name: Create builds directory
      run: |
        mkdir -p builds
        echo "Created builds directory"
    
    - name: Copy and version PDFs
      run: |
        if [ -f "2025F_SSW590_11/itManual.pdf" ]; then
          # Copy with commit hash
          cp 2025F_SSW590_11/itManual.pdf builds/itManual_${{ steps.commit.outputs.short_hash }}.pdf
          
          # Copy as latest
          cp 2025F_SSW590_11/itManual.pdf builds/itManual_latest.pdf
          
          # Create zipped version
          cd 2025F_SSW590_11
          zip ../builds/itManual_${{ steps.commit.outputs.short_hash }}.zip itManual.pdf
          cd ..
          
          # Create build info
          echo "Build Date: $(date)" > builds/BUILD_INFO.txt
          echo "Commit Hash: ${{ steps.commit.outputs.short_hash }}" >> builds/BUILD_INFO.txt
          echo "Commit Message: ${{ github.event.head_commit.message }}" >> builds/BUILD_INFO.txt
          
          echo "‚úÖ PDFs created successfully"
          ls -lh builds/
        else
          echo "‚ùå PDF not found!"
          exit 1
        fi
    
    - name: Commit PDFs to repository
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add builds/
        git commit -m "üì¶ Add compiled PDF for commit ${{ steps.commit.outputs.short_hash }} [skip ci]" || echo "No changes to commit"
        git push
    
    - name: Upload PDF artifacts
      uses: actions/upload-artifact@v4
      with:
        name: compiled-pdfs-${{ steps.commit.outputs.short_hash }}
        path: |
          builds/*.pdf
          builds/*.zip
          builds/BUILD_INFO.txt
        retention-days: 90
